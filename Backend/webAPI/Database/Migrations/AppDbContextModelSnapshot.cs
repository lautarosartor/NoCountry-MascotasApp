// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webAPI.Database;

#nullable disable

namespace webAPI.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("webAPI.Models.Localidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Localidad");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdProvincia = 21,
                            Nombre = "Avellaneda"
                        },
                        new
                        {
                            Id = 2,
                            IdProvincia = 21,
                            Nombre = "Reconquista"
                        });
                });

            modelBuilder.Entity("webAPI.Models.Mascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Años")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Borrado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Meses")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Mascota");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Años = 1,
                            Borrado = false,
                            Descripcion = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facere eum animi saepe odio accusantium.",
                            Especie = "Gato",
                            Estado = "Disponible",
                            IdUsuario = 1,
                            Meses = 3,
                            Nombre = "Michi",
                            Raza = "Gris",
                            UrlImagen = "https://w.wallhaven.cc/full/p9/wallhaven-p9gr59.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Años = 2,
                            Borrado = false,
                            Descripcion = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facere eum animi saepe odio accusantium.",
                            Especie = "Gato",
                            Estado = "Disponible",
                            IdUsuario = 1,
                            Meses = 1,
                            Nombre = "Michifus",
                            Raza = "Marmolado",
                            UrlImagen = "https://w.wallhaven.cc/full/lq/wallhaven-lqm2zl.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Años = 1,
                            Borrado = false,
                            Descripcion = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facere eum animi saepe odio accusantium.",
                            Especie = "Perro",
                            Estado = "Disponible",
                            IdUsuario = 1,
                            Meses = 1,
                            Nombre = "Firu",
                            Raza = "Aleman",
                            UrlImagen = "https://w.wallhaven.cc/full/4x/wallhaven-4xjqel.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Años = 2,
                            Borrado = false,
                            Descripcion = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facere eum animi saepe odio accusantium.",
                            Especie = "Perro",
                            Estado = "Disponible",
                            IdUsuario = 1,
                            Meses = 2,
                            Nombre = "Firulais",
                            Raza = "Callejero",
                            UrlImagen = "https://w.wallhaven.cc/full/p9/wallhaven-p9gr59.jpg"
                        });
                });

            modelBuilder.Entity("webAPI.Models.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Provincia");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Buenos Aires"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Catamarca"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Chaco"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Chubut"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Ciudad Autónoma de Buenos Aires"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Córdoba"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Corrientes"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Entre Ríos"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Formosa"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Jujuy"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "La Pampa"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "La Rioja"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Mendoza"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Misiones"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Neuquén"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Río Negro"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Salta"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "San Juan"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "San Luis"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Santa Cruz"
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Santa Fe"
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Santiago del Estero"
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "Tierra del Fuego, Antártida e Islas del Atlántico Sur"
                        },
                        new
                        {
                            Id = 24,
                            Nombre = "Tucumán"
                        });
                });

            modelBuilder.Entity("webAPI.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Refugio"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Cliente"
                        });
                });

            modelBuilder.Entity("webAPI.Models.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdMascota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdMascota");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Solicitud");
                });

            modelBuilder.Entity("webAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Borrado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdRol")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("IdLocalidad");

                    b.HasIndex("IdProvincia");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "SRL",
                            Borrado = false,
                            Descripcion = "",
                            Direccion = "",
                            Email = "refugio@g.com",
                            IdLocalidad = 1,
                            IdProvincia = 21,
                            IdRol = 2,
                            Nombre = "Refugio",
                            PasswordHash = new byte[] { 27, 148, 193, 181, 10, 96, 126, 125, 135, 205, 255, 15, 16, 231, 128, 172, 23, 205, 208, 219, 135, 189, 51, 167, 70, 226, 219, 82, 191, 97, 10, 243, 248, 110, 221, 100, 30, 6, 64, 8, 77, 1, 17, 234, 228, 243, 147, 231, 177, 206, 152, 72, 126, 133, 224, 26, 91, 23, 234, 161, 217, 39, 73, 26 },
                            PasswordSalt = new byte[] { 103, 71, 199, 174, 182, 25, 63, 196, 158, 37, 83, 212, 116, 131, 88, 29, 208, 217, 196, 81, 202, 95, 107, 202, 111, 148, 243, 241, 143, 157, 173, 37, 233, 234, 6, 24, 248, 32, 226, 198, 225, 206, 60, 145, 116, 72, 90, 134, 198, 12, 2, 143, 83, 156, 124, 219, 1, 104, 202, 59, 107, 108, 251, 74, 184, 71, 47, 176, 94, 108, 88, 170, 1, 51, 129, 131, 12, 156, 164, 22, 0, 132, 230, 33, 161, 223, 189, 196, 203, 204, 7, 217, 65, 159, 248, 9, 29, 246, 189, 122, 113, 209, 51, 50, 148, 242, 119, 161, 69, 29, 144, 35, 207, 41, 13, 127, 55, 100, 239, 64, 169, 247, 138, 139, 127, 159, 33, 61 }
                        });
                });

            modelBuilder.Entity("webAPI.Models.Localidad", b =>
                {
                    b.HasOne("webAPI.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("webAPI.Models.Mascota", b =>
                {
                    b.HasOne("webAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("webAPI.Models.Solicitud", b =>
                {
                    b.HasOne("webAPI.Models.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("IdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("webAPI.Models.Usuario", b =>
                {
                    b.HasOne("webAPI.Models.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("IdLocalidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webAPI.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webAPI.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localidad");

                    b.Navigation("Provincia");

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
